{
    "Introduction": "These are some Future Trading algorithm that is used by Future first traders and are designed by the quant team of the company. The data contains the name of he algo, the creater of the algo, the description of the algo , the parameters of the algo and alsoi the particular critical cases of the algorithm.",
    "company name": "Future First Hertshten Group",
    "FF Stop Pv3": "The name of the algorithm is 'FF Stop Pv3'. This algorithm was uploaded by 'Sandeep Mehra'. The description of the algorithm is 'A Stop order is an instruction to submit a buy or sell order if and when the user-specified stop trigger price is attained or penetrated. FF STOP Pv3 will trigger if and only if the following three conditions hold simultaneously: Stop Price = Best Bid/Ask Price, Stop price = LTP, Volume available at the stop price < StopVol. Order Price Calculation - If MarketStop = True then stopPrice + Payup tick, else price will trail based on StopVol up to predefined payUp ticks. This algorithm has the following parameters: - StopVol: Minimum volume you are willing to lean against. The algo will trigger only if the volume at the opposite side at your stop-loss price goes below the quantity put against StopVol. - Payup Ticks: The number of ticks you want the algo to try hitting if the stop fill on the previous price could not be obtained. This scenario may occur in highly volatile situations or in thin markets, or maybe your StopVol is low; in such situations, it is likely that prices can flip without the standing bid/offer coming down to the StopVol defined by you. - Market Stop: 'True' or 'False' can be selected to activate or deactivate this function. If True, the algo will send the market order at the price based on the PayUpTick entered, as soon as StopVol defined by you triggers the stop price. There is one case for this algorithm: - If the price is flipped without getting the stop-loss orders filled, the PayUpTick will not be immediately triggered; instead, the algo will wait until your StopVol is achieved in the next price.'",
    "FF WCT Stop Pv5": "uploadedBy: Sandeep Mehra  description: The order is OMA that satnds for Order Management Algo. Meaning, you have to have an existing order to apply the algo onto. Stop loss order with user defined Stop Volume and improved Stop Tick option. Trade: True/ False, if True then algo waits for at least 1 trade at StopPrice before triggering.  parameters: - StopVol: Minimum volume you are willing to lean against. The algo will trigger, only if the volume at opposite side at your stop-loss price goes below the quantity put against StopVol. - StopTicks: This means the number of ticks you want the algo to try hitting if the stop fill on previous price could not be obtained. This scenario may occur in highly volatile situations or in thin markets, or maybe your StopVol is low; in such situations it is likely that prices can flip without the standing bid/offer coming down to the StopVol defined by you. - PostWCTPayup(Ticks): Payup ticks after WCT part has performed its action. - Trade: True or False can be selected to activate or deactivate this function. If True, the algo will only trigger if there is at least one trade at Stop Price.  cases: - Upon part fills, the algo must place the same amount of lots at target price and allocate the same number of lots, as main fill qty, at the stoploss price. - Rest of the orders should be managed by the algo. - StopLoss should change as per new set parameter and TP will remain at the same place.",
    "FF bracket Pv2": "uploadedBy: Sandeep Mehra  description: The order is OTA, that is Order Ticket Algo, meaning you will have to attach this order parent to a new order. This new order will be entered in the market as new order that will be managed by this algo. Stop loss order with user defined Stop Volume and improved Stop Tick option. Trade: True/ False, if True then algo waits for at least 1 trade at StopPrice before triggering.  parameters: - Entry TrgVol: If the volume at the opposite side drops below the volume defined under this parameter, a limit order at that price will be placed. - Profit Ticks: User can define the number of profit ticks. The algo will calculate the target price by adding or subtracting this number with the minimum price increment. - StopLoss Ticks: User may define the number of stoploss ticks. The algo will calculate the target price by adding or subtracting this number with the minimum price increment. - PayUpTicks: This means the number of ticks you want the algo to try hitting if the stop fill on the previous price could not be obtained. This scenario may occur in highly volatile situations or in thin markets, or maybe your StopVol is low; in such situations, it is likely that prices can flip without the standing bid/offer coming down to the StopVol defined by you. - Trade: This parameter makes it different from TT Bracket. User can opt for this parameter to prevent t he algo from submitting stoploss orders upon irrational thinning at times, such as near market close. - MarketStop: True or False can be selected to activate or deactivate this function. If True, the algo will send the market order at the price based on the PayUpTick entered, as soon as StopVol defined by you triggers the stop price.  cases: - Upon part fills, the algo must place the same amount of lots at the target price and allocate the same number of lots, as main fill qty, at the stoploss price. - Rest of the orders should be managed by the algo. - StopLoss should change as per the new set parameter and TP will remain at the same place. - No Fills: User deletes the order from Ladder - Partial Fills: User deletes the order from Ladder",
    "FF Minvol Pv4": "uploadedBy: Sandeep Mehra  description: An OTA algo. The orders will only be submitted when the quantity on the leaning price is greater than the quantity set as MinVol.  parameters: - Minvol: Minimum leaning volume for your limit order. - R__MinVol(%): Percentage quantity of the volume at opposite side. The quantity calculated will be the minimum lean quantity for your order if it's greater than MinVol quantity.  cases: - Upon part fills, the algo must place the same amount of lots at target price and allocate the same numbers of lots, as main fill qty, at the stoploss price. - Rest of the orders should be managed by the algo. - Algo will work as per logic at the price it is shifted to.",
    "FF R_MinVol pv3": "uploadedBy: Sandeep Mehra  description: An OTA algo. R_MinVol Means, Ratio-ed MinVol. We have two quantities you are willing your limit order to lean on, absolute and ratio based. The algo calculates the maximum of the two to identify the final MinVol your order will be leaning against. For example, in the image you can see MinVol is set as 1000 and R_MinVol(%) as 2. This means, the MinVol is 1000 as far as volume at opposite side of our order is less than or equals 50,000 (since 2% of 50,000 is 1000). As the volume goes above 50,000 the MinVol criteria changes, because the value would be more than 1000. Let's assume the volume at the opposite turns 60,000, the new MinVol becomes 2% of 60,000, which is 1200. Now if the volume at price, your order is leaning on, turns 1100 (which is more than your regular Min_Vol), the order will be removed as the new MinVol is 1200. Orders will be replaced as the set parameters match back again.  parameters: - MinVol: Minimum leaning volume for your limit order. - R__MinVol(%): Percentage quantity of the volume at opposite side. The quantity calculated will be the minimum lean quantity for your order if it's greater than MinVol quantity.  cases: - Upon part fills, the algo must place the same amount of lots at target price and allocate the same numbers of lots, as main fill qty, at the stoploss price. - Rest of the orders should be managed by the algo. - Algo will work as per logic at the price it is shifted to.",
    "FF Churning Pv2": "uploadedBy: Sandeep Mehra  description: OTA algorithm, will place Entry order if Entry Price <= Best Bid Price for bid side order (vice versa). Entry Qty is the number of lots with which the order will be placed. Reload will restart the Entry order once both Entry and Exit order working qty is 0. If the Bid quantity at StopPrice is less than StopVol and Best BidPrice <= StopPrice, the target order will be deleted. On acknowledgement of deletion, the Stoporder will be quoted at StopPrice. The StopOrder will trail.  parameters: - Target(ticks): User Defined, to decide the target order price from fill price (Exit order). - Stop(ticks): User Defined, to decide the StopOrder order price from fill price (Exit order). - StopVol: User Defined, Stopvol at Stop Price. - Reload: User Defined, Example (say Reload=10, Qty=5): the algo will quote entry order 11 times in total (55 lots).  cases: - Upon part fills, the algo must place the same amount of lots at target price and allocate the same numbers of lots, as main fill qty, at the stoploss price. - Rest of the orders should be managed by the algo. - Algo will work as per logic at the price it is shifted to. If Stop(ticks) parameter is set as 0, it will not send an stop order entirely."
}